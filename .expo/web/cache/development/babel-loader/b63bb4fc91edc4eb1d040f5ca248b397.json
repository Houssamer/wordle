{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var setStoreData = function setStoreData(key, value) {\n  return _regeneratorRuntime.async(function setStoreData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\nexport var getStoreData = function getStoreData(key) {\n  var value;\n  return _regeneratorRuntime.async(function getStoreData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          value = _context2.sent;\n\n          if (!(value !== null)) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", value);\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", null);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};","map":{"version":3,"sources":["D:/fiverr/projet15/wordle/src/utils/localStorageFuncs.ts"],"names":["AsyncStorage","setStoreData","key","value","setItem","console","log","getStoreData","getItem"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,GAAP,EAAoBC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAElBH,YAAY,CAACI,OAAb,CAAqBF,GAArB,EAA0BC,KAA1B,CAFkB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIxBE,UAAAA,OAAO,CAACC,GAAR;;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AASP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOL,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEJF,YAAY,CAACQ,OAAb,CAAqBN,GAArB,CAFI;;AAAA;AAElBC,UAAAA,KAFkB;;AAAA,gBAGpBA,KAAK,KAAK,IAHU;AAAA;AAAA;AAAA;;AAAA,4CAIfA,KAJe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAOjB,IAPiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const setStoreData = async (key: string, value: string) => {\r\n  try {\r\n    await AsyncStorage.setItem(key, value);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n// eslint-disable-next-line\r\n//@ts-ignore\r\nexport const getStoreData = async (key: string) => {\r\n  try {\r\n    const value = await AsyncStorage.getItem(key);\r\n    if (value !== null) {\r\n      return value;\r\n    }\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}