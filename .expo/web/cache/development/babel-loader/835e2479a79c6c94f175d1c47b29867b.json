{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { createSlice } from '@reduxjs/toolkit';\nimport { initialGuesses } from \"../../utils/constants\";\nvar initialState = {\n  solution: '',\n  guesses: _toConsumableArray(initialGuesses),\n  currentGuessIndex: 0,\n  usedKeys: {},\n  gameStarted: false,\n  gameEnded: false,\n  gameWon: false,\n  wrongGuessShake: false,\n  gameLanguage: 'en'\n};\nexport var gameStateSlice = createSlice({\n  name: 'gameState',\n  initialState: initialState,\n  reducers: {\n    setSolution: function setSolution(state, action) {\n      state.solution = action.payload;\n    },\n    setGuesses: function setGuesses(state, action) {\n      state.guesses = action.payload;\n    },\n    setCurrentGuessIndex: function setCurrentGuessIndex(state, action) {\n      state.currentGuessIndex = action.payload;\n    },\n    setUsedKeys: function setUsedKeys(state, action) {\n      state.usedKeys = action.payload;\n    },\n    setGameStarted: function setGameStarted(state, action) {\n      state.gameStarted = action.payload;\n    },\n    setGameEnded: function setGameEnded(state, action) {\n      state.gameEnded = action.payload;\n    },\n    setGameWon: function setGameWon(state, action) {\n      state.gameWon = action.payload;\n    },\n    setWrongGuessShake: function setWrongGuessShake(state, action) {\n      state.wrongGuessShake = action.payload;\n    },\n    setGameLanguage: function setGameLanguage(state, action) {\n      state.gameLanguage = action.payload;\n    }\n  }\n});\nvar _gameStateSlice$actio = gameStateSlice.actions,\n    setSolution = _gameStateSlice$actio.setSolution,\n    setGuesses = _gameStateSlice$actio.setGuesses,\n    setCurrentGuessIndex = _gameStateSlice$actio.setCurrentGuessIndex,\n    setUsedKeys = _gameStateSlice$actio.setUsedKeys,\n    setGameStarted = _gameStateSlice$actio.setGameStarted,\n    setGameEnded = _gameStateSlice$actio.setGameEnded,\n    setGameWon = _gameStateSlice$actio.setGameWon,\n    setWrongGuessShake = _gameStateSlice$actio.setWrongGuessShake,\n    setGameLanguage = _gameStateSlice$actio.setGameLanguage;\nexport { setSolution, setGuesses, setCurrentGuessIndex, setUsedKeys, setGameStarted, setGameEnded, setGameWon, setWrongGuessShake, setGameLanguage };\nexport var gameState = function gameState(state) {\n  return state.gameState;\n};\nexport default gameStateSlice.reducer;","map":{"version":3,"sources":["D:/fiverr/projet15/wordle/src/store/slices/gameStateSlice.ts"],"names":["createSlice","initialGuesses","initialState","solution","guesses","currentGuessIndex","usedKeys","gameStarted","gameEnded","gameWon","wrongGuessShake","gameLanguage","gameStateSlice","name","reducers","setSolution","state","action","payload","setGuesses","setCurrentGuessIndex","setUsedKeys","setGameStarted","setGameEnded","setGameWon","setWrongGuessShake","setGameLanguage","actions","gameState","reducer"],"mappings":";AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAMA,SAASC,cAAT;AAcA,IAAMC,YAAuB,GAAG;AAC9BC,EAAAA,QAAQ,EAAE,EADoB;AAE9BC,EAAAA,OAAO,qBAAMH,cAAN,CAFuB;AAG9BI,EAAAA,iBAAiB,EAAE,CAHW;AAI9BC,EAAAA,QAAQ,EAAE,EAJoB;AAK9BC,EAAAA,WAAW,EAAE,KALiB;AAM9BC,EAAAA,SAAS,EAAE,KANmB;AAO9BC,EAAAA,OAAO,EAAE,KAPqB;AAQ9BC,EAAAA,eAAe,EAAE,KARa;AAS9BC,EAAAA,YAAY,EAAE;AATgB,CAAhC;AAYA,OAAO,IAAMC,cAAc,GAAGZ,WAAW,CAAC;AACxCa,EAAAA,IAAI,EAAE,WADkC;AAExCX,EAAAA,YAAY,EAAZA,YAFwC;AAGxCY,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,qBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC9BD,MAAAA,KAAK,CAACb,QAAN,GAAiBc,MAAM,CAACC,OAAxB;AACD,KAHO;AAIRC,IAAAA,UAAU,EAAE,oBAACH,KAAD,EAAQC,MAAR,EAAmB;AAC7BD,MAAAA,KAAK,CAACZ,OAAN,GAAgBa,MAAM,CAACC,OAAvB;AACD,KANO;AAORE,IAAAA,oBAAoB,EAAE,8BAACJ,KAAD,EAAQC,MAAR,EAAmB;AACvCD,MAAAA,KAAK,CAACX,iBAAN,GAA0BY,MAAM,CAACC,OAAjC;AACD,KATO;AAURG,IAAAA,WAAW,EAAE,qBAACL,KAAD,EAAQC,MAAR,EAAmB;AAC9BD,MAAAA,KAAK,CAACV,QAAN,GAAiBW,MAAM,CAACC,OAAxB;AACD,KAZO;AAaRI,IAAAA,cAAc,EAAE,wBAACN,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,CAACT,WAAN,GAAoBU,MAAM,CAACC,OAA3B;AACD,KAfO;AAgBRK,IAAAA,YAAY,EAAE,sBAACP,KAAD,EAAQC,MAAR,EAAmB;AAC/BD,MAAAA,KAAK,CAACR,SAAN,GAAkBS,MAAM,CAACC,OAAzB;AACD,KAlBO;AAmBRM,IAAAA,UAAU,EAAE,oBAACR,KAAD,EAAQC,MAAR,EAAmB;AAC7BD,MAAAA,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACC,OAAvB;AACD,KArBO;AAsBRO,IAAAA,kBAAkB,EAAE,4BAACT,KAAD,EAAQC,MAAR,EAAmB;AACrCD,MAAAA,KAAK,CAACN,eAAN,GAAwBO,MAAM,CAACC,OAA/B;AACD,KAxBO;AAyBRQ,IAAAA,eAAe,EAAE,yBAACV,KAAD,EAAQC,MAAR,EAAmB;AAClCD,MAAAA,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;AACD;AA3BO;AAH8B,CAAD,CAAlC;AAkCA,4BAUHN,cAAc,CAACe,OAVZ;AAAA,IACLZ,WADK,yBACLA,WADK;AAAA,IAELI,UAFK,yBAELA,UAFK;AAAA,IAGLC,oBAHK,yBAGLA,oBAHK;AAAA,IAILC,WAJK,yBAILA,WAJK;AAAA,IAKLC,cALK,yBAKLA,cALK;AAAA,IAMLC,YANK,yBAMLA,YANK;AAAA,IAOLC,UAPK,yBAOLA,UAPK;AAAA,IAQLC,kBARK,yBAQLA,kBARK;AAAA,IASLC,eATK,yBASLA,eATK;;AAYP,OAAO,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACZ,KAAD;AAAA,SAAsBA,KAAK,CAACY,SAA5B;AAAA,CAAlB;AAEP,eAAehB,cAAc,CAACiB,OAA9B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport React, {\r\n   Component\r\n} from 'react';\r\n//import { RootState } from '...';\r\nimport { guess, matchingUsedKey } from '../../types';\r\nimport { initialGuesses } from '../../utils/constants';\r\n\r\ninterface gameState2 {\r\n  solution: string;\r\n  guesses: guess[];\r\n  currentGuessIndex: number;\r\n  usedKeys: matchingUsedKey;\r\n  gameStarted: boolean;\r\n  gameEnded: boolean;\r\n  gameWon: boolean;\r\n  wrongGuessShake: boolean;\r\n  gameLanguage: string;\r\n}\r\n\r\nconst initialState: gameState = {\r\n  solution: '',\r\n  guesses: [...initialGuesses],\r\n  currentGuessIndex: 0,\r\n  usedKeys: {},\r\n  gameStarted: false,\r\n  gameEnded: false,\r\n  gameWon: false,\r\n  wrongGuessShake: false,\r\n  gameLanguage: 'en',\r\n};\r\n\r\nexport const gameStateSlice = createSlice({\r\n  name: 'gameState',\r\n  initialState,\r\n  reducers: {\r\n    setSolution: (state, action) => {\r\n      state.solution = action.payload;\r\n    },\r\n    setGuesses: (state, action) => {\r\n      state.guesses = action.payload;\r\n    },\r\n    setCurrentGuessIndex: (state, action) => {\r\n      state.currentGuessIndex = action.payload;\r\n    },\r\n    setUsedKeys: (state, action) => {\r\n      state.usedKeys = action.payload;\r\n    },\r\n    setGameStarted: (state, action) => {\r\n      state.gameStarted = action.payload;\r\n    },\r\n    setGameEnded: (state, action) => {\r\n      state.gameEnded = action.payload;\r\n    },\r\n    setGameWon: (state, action) => {\r\n      state.gameWon = action.payload;\r\n    },\r\n    setWrongGuessShake: (state, action) => {\r\n      state.wrongGuessShake = action.payload;\r\n    },\r\n    setGameLanguage: (state, action) => {\r\n      state.gameLanguage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setSolution,\r\n  setGuesses,\r\n  setCurrentGuessIndex,\r\n  setUsedKeys,\r\n  setGameStarted,\r\n  setGameEnded,\r\n  setGameWon,\r\n  setWrongGuessShake,\r\n  setGameLanguage,\r\n} = gameStateSlice.actions;\r\n\r\nexport const gameState = (state: RootState) => state.gameState;\r\n\r\nexport default gameStateSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}